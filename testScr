#!/bin/bash

Green="\033[0;32m"
White="\033[1;37m"
Space="\t\t\t\t\t\t\t"
Format=${Space}${Green}
Home=~/CS1XA3
DefaultGitMsg="Default commit message"

if [[ $1 != *"q"* ]]
then
	cat testData |
	while read stuffToDo
	do
        	echo -e "${stuffToDo}${Format}[OK]${White}"
		sleep 0.5
	done
fi

git status
echo "Adding changes to log"
git status | grep "modified" > changes.log
grep -r "#ToDo" . > todo.log
find . -name "*.hs" | xargs ghc -fno-code > error.log

echo "Staring Add Files"
git status -s | grep "??*\|M" | sed 's/.\{3\}//' |    #Long but honestly it works
while read stuffToAdd
do
	find -name ${stuffToAdd} |
	while read inDir
	do
		echo "Adding $(basename "$stuffToAdd") in ${inDir}"
		cd ${inDir}
		git add $(basename "$stuffToAdd")
		cd $Home
	done
	cd $Home
done

git status -s | grep "D" | sed 's/.\{3\}//' |
while read stuffToRm
do
        git rm -f ${stuffToRm}
done


echo "Creating working tree log"
find -type d | sed "/git/d" > workingTree.log

if [[ $1 == *"d"* ]]
then
	echo "Please enter a file name"
	read fileName
	echo "Enter default text"
	read defaultText
	cat workingTree.log |
	while read targetDir #ToDo check if file already exists. Have flag for overwrite
	do
		echo "Creatin file ${fileName} in ${targetDir}"
		cd $targetDir
		touch ${fileName}
		echo ${defaultText} > ${fileName}
		cd ${Home}
	done
fi

echo -e "\n\n\nUpdated git status"
echo "---------------------------------"
git status

if [[ $1 == *"u"* ]]
then
        if [[ $1 == *"m"* ]]
        then
                echo "Sending commit with message ${2}"
                git commit -m ${2}
        fi
else
        echo "Sending commit with default message"
        git commit -m ${DefaultGitMsg}
fi
