

[0;32mNew and Modified[1;37m
changes.log
testScr
todo.log
startupData


[0;32mRemoved files:[1;37m
adsfd
echo
error.log
startUpStuff
stuffToDo


[0;32mChanged code:[1;37m
diff --git a/adsfd b/adsfd
deleted file mode 100644
index e69de29..0000000
diff --git a/changes.log b/changes.log
index 5a8caac..6be9bf8 100644
--- a/changes.log
+++ b/changes.log
@@ -2,131 +2,17 @@
 
 [0;32mNew and Modified[1;37m
 changes.log
+testScr
+todo.log
+startupData
 
 
 [0;32mRemoved files:[1;37m
+adsfd
+echo
+error.log
+startUpStuff
+stuffToDo
 
 
 [0;32mChanged code:[1;37m
-diff --git a/changes.log b/changes.log
-index 55bd977..2f1c262 100644
---- a/changes.log
-+++ b/changes.log
-@@ -2,117 +2,9 @@
- 
- [0;32mNew and Modified[1;37m
- changes.log
--funScr
--testScr
--todo.log
--adsfd
--echo
--startUpStuff
- 
- 
- [0;32mRemoved files:[1;37m
--mMap
- 
- 
- [0;32mChanged code:[1;37m
--diff --git a/changes.log b/changes.log
--index 5aa6827..502ad4d 100644
----- a/changes.log
--+++ b/changes.log
--@@ -1 +1,17 @@
---	modified:   changes.log
--+
--+
--+[0;32mNew and Modified[1;37m
--+changes.log
--+funScr
--+testScr
--+todo.log
--+adsfd
--+echo
--+startUpStuff
--+
--+
--+[0;32mRemoved files:[1;37m
--+mMap
--+
--+
--+[0;32mChanged code:[1;37m
--diff --git a/funScr b/funScr
--index c57c575..a28f6f9 100644
----- a/funScr
--+++ b/funScr
--@@ -28,11 +28,14 @@ function mainStuff
-- {
-- git status
-- echo "Adding changes to log"
---git status | grep "modified" > changes.log
--+echo -e "\n\n${Green}New and Modified${White}" > changes.log
--+git status -s | grep "?? \| M " | sed 's/.\{3\}//' >> changes.log
--+echo -e "\n\n${Green}Removed files:${White}" >> changes.log
--+git status -s | grep " D " | sed 's/.\{3\}//' >> changes.log
--+echo -e "\n\n${Green}Changed code:${White}" >> changes.log
--+git diff >> changes.log
-- grep --exclude="todo.log" -r "#ToDo" . > todo.log
-- find . -name "*.hs" | xargs ghc -fno-code > error.log
---echo "Creating working tree log"
---find -type d | sed "/git/d" > workingTree.log
-- }
-- 
-- 
--diff --git a/mMap b/mMap
--deleted file mode 100644
--index e69de29..0000000
--diff --git a/testScr b/testScr
--index 18d34d2..dab3928 100755
----- a/testScr
--+++ b/testScr
--@@ -33,13 +33,25 @@ fi
-- 
-- git status
-- echo "Adding changes to log"
---git status | grep "modified" > changes.log
--+echo -e "\n\n${Green}New and Modified${White}" > changes.log #Overwrites the old log file
--+git status -s | grep "?? \| M " | sed 's/.\{3\}//' >> changes.log
--+echo -e "\n\n${Green}Removed files:${White}" >> changes.log
--+git status -s | grep " D " | sed 's/.\{3\}//' >> changes.log
--+echo -e "\n\n${Green}Changed code:${White}" >> changes.log
--+git diff >> changes.log
-- grep --exclude="todo.log" -r "#ToDo" . > todo.log
-- find . -name "*.hs" | xargs ghc -fno-code > error.log
-- 
-- echo "Creating working tree log"
-- find -type d | sed "/git/d" > workingTree.log
-- 
--+if [[ $1 == *"s"* ]]
--+then
--+	echo "What tag should I look for?"
--+	read toFind
--+	grep --exclude="$toFind" -r "$toFind" . > $toFind
--+fi
--+
-- if [[ $1 == *"d"* ]]
-- then
--         echo "Please enter a file name"
--diff --git a/todo.log b/todo.log
--index b8d32d4..67f5d35 100644
----- a/todo.log
--+++ b/todo.log
--@@ -1,3 +1,17 @@
--+./changes.log: grep --exclude="todo.log" -r "#ToDo" . > todo.log
--+./changes.log: grep --exclude="todo.log" -r "#ToDo" . > todo.log
--+./changes.log:+./changes.log: grep --exclude="todo.log" -r "#ToDo" . > todo.log
--+./changes.log:+./changes.log:+./changes.log: grep --exclude="todo.log" -r "#ToDo" . > todo.log
--+./changes.log:+./changes.log:+./changes.log:+./changes.log: grep --exclude="todo.log" -r "#ToDo" . > todo.log
--+./changes.log:+./changes.log:+./changes.log: ./funScr:grep --exclude="todo.log" -r "#ToDo" . > todo.log
--+./changes.log:+./changes.log:+./changes.log: ./funScr:	while read targetDir #ToDo check if file already exists. Have flag for overwrite
--+./changes.log:+./changes.log:+./changes.log: ./Labs/Bash01/ToDo:#ToDo add some stuff
--+./changes.log:+./changes.log: ./funScr:grep --exclude="todo.log" -r "#ToDo" . > todo.log
--+./changes.log:+./changes.log: ./funScr:	while read targetDir #ToDo check if file already exists. Have flag for overwrite
--+./changes.log:+./changes.log: ./Labs/Bash01/ToDo:#ToDo add some stuff
--+./changes.log: ./funScr:grep --exclude="todo.log" -r "#ToDo" . > todo.log
--+./changes.log: ./funScr:	while read targetDir #ToDo check if file already exists. Have flag for overwrite
--+./changes.log: ./Labs/Bash01/ToDo:#ToDo add some stuff
-- ./funScr:grep --exclude="todo.log" -r "#ToDo" . > todo.log
-- ./funScr:	while read targetDir #ToDo check if file already exists. Have flag for overwrite
-- ./Labs/Bash01/ToDo:#ToDo add some stuff
diff --git a/echo b/echo
deleted file mode 100644
index dc7e623..0000000
--- a/echo
+++ /dev/null
@@ -1,79 +0,0 @@
-./.git/hooks/commit-msg.sample:# grep -qs "^$SOB" "$1" || echo "$SOB" >> "$1"
-./.git/hooks/commit-msg.sample:	echo >&2 Duplicate Signed-off-by lines.
-./.git/hooks/pre-push.sample:			echo "Found WIP commit in $local_ref, not pushing"
-./.git/hooks/pre-rebase.sample:	echo >&2 "No such branch $topic"
-./.git/hooks/pre-rebase.sample:	echo >&2 "$topic is fully merged to master; better remove it."
-./.git/hooks/pre-rebase.sample:		echo >&2 "$topic is already up-to-date with master"
-./.git/hooks/prepare-commit-msg.sample:# grep -qs "^$SOB" "$1" || echo "$SOB" >> "$1"
-./.git/hooks/update.sample:	echo "Don't run this script from the command line." >&2
-./.git/hooks/update.sample:	echo " (if you want, you could supply GIT_DIR then run" >&2
-./.git/hooks/update.sample:	echo "  $0 <ref> <oldrev> <newrev>)" >&2
-./.git/hooks/update.sample:	echo "usage: $0 <ref> <oldrev> <newrev>" >&2
-./.git/hooks/update.sample:	echo "*** Project description file hasn't been set" >&2
-./.git/hooks/update.sample:			echo "*** The un-annotated tag, $short_refname, is not allowed in this repository" >&2
-./.git/hooks/update.sample:			echo "*** Use 'git tag [ -a | -s ]' for tags you want to propagate." >&2
-./.git/hooks/update.sample:			echo "*** Deleting a tag is not allowed in this repository" >&2
-./.git/hooks/update.sample:			echo "*** Tag '$refname' already exists." >&2
-./.git/hooks/update.sample:			echo "*** Modifying a tag is not allowed in this repository." >&2
-./.git/hooks/update.sample:			echo "*** Creating a branch is not allowed in this repository" >&2
-./.git/hooks/update.sample:			echo "*** Deleting a branch is not allowed in this repository" >&2
-./.git/hooks/update.sample:			echo "*** Deleting a tracking branch is not allowed in this repository" >&2
-./.git/hooks/update.sample:		echo "*** Update hook: unknown type of update to ref $refname of type $newrev_type" >&2
-./Assign2/README.md:https://stackoverflow.com/questions/5947742/how-to-change-the-output-color-of-echo-in-linux
-./changes.log: echo "Adding changes to log"
-./changes.log:+echo -e "\n\n${Green}New and Modified${White}" > changes.log
-./changes.log:+echo -e "\n\n${Green}Removed files:${White}" >> changes.log
-./changes.log:+echo -e "\n\n${Green}Changed code:${White}" >> changes.log
-./changes.log:-echo "Creating working tree log"
-./changes.log: echo "Adding changes to log"
-./changes.log:+echo -e "\n\n${Green}New and Modified${White}" > changes.log
-./changes.log:+echo -e "\n\n${Green}Removed files:${White}" >> changes.log
-./changes.log:+echo -e "\n\n${Green}Changed code:${White}" >> changes.log
-./changes.log: echo "Creating working tree log"
-./changes.log:+	echo "What tag should I look for?"
-./changes.log:         echo "Please enter a file name"
-./exist:	echo "File found"
-./exist:	echo "File not found"
-./funScr:echo "Root directory is set to: ${Home}"
-./funScr:    echo -e "${stuffToDo}${Format}[OK]${White}"
-./funScr:echo "Adding changes to log"
-./funScr:echo -e "\n\n${Green}New and Modified${White}" > changes.log
-./funScr:echo -e "\n\n${Green}Removed files:${White}" >> changes.log
-./funScr:echo -e "\n\n${Green}Changed code:${White}" >> changes.log
-./funScr:	echo "Please enter a file name"
-./funScr:	echo "Enter default text"
-./funScr:		echo "Creating file ${fileName} in ${targetDir}"
-./funScr:			echo ${defaultText} >> ${fileName}
-./funScr:			echo ${defaultText} > ${fileName}
-./funScr:echo "Staring Add Files"
-./funScr:        			echo "Adding $(basename "$stuffToAdd") in ${inDir}"
-./funScr:        			echo "Found #ignore tag: $(basename "$stuffToAdd") ignored"
-./funScr:echo "Starting remove files"
-./funScr:echo -e "\n\n\nUpdated git status"
-./funScr:echo "---------------------------------"
-./funScr:			echo "Sending commit with message ${2}"
-./funScr:	echo "Sending commit with default message"
-./funScr:echo "Entering Interpreted Mode"
-./funScr:echo "Type \"helpPage\" for help"
-./funScr:	echo "Enter a command:"
-./testScr:echo "Root directory is set to: ${Home}"
-./testScr:        	echo -e "${stuffToDo}${Format}[OK]${White}"
-./testScr:echo "Adding changes to log"
-./testScr:echo -e "\n\n${Green}New and Modified${White}" > changes.log
-./testScr:echo -e "\n\n${Green}Removed files:${White}" >> changes.log
-./testScr:echo -e "\n\n${Green}Changed code:${White}" >> changes.log
-./testScr:echo "Creating working tree log"
-./testScr:	echo "What tag should I look for?"
-./testScr:        echo "Please enter a file name"
-./testScr:        echo "Enter default text"
-./testScr:                echo "Creating file ${fileName} in ${targetDir}"
-./testScr:			echo ${defaultText} >> ${fileName}
-./testScr:                	echo ${defaultText} > ${fileName}
-./testScr:	echo "Staring Add Files"
-./testScr:						echo "Adding $(basename "$stuffToAdd") in ${inDir}"
-./testScr:						echo "Found #ignore tag: $(basename "$stuffToAdd") ignored"
-./testScr:	echo "Starting remove files"
-./testScr:echo -e "\n\n\nUpdated git status (To Update please use the -u flag)"
-./testScr:echo "---------------------------------"
-./testScr:                echo "Sending commit with message ${2}"
-./testScr:		echo "Sending commit with default message"
diff --git a/error.log b/error.log
deleted file mode 100644
index e69de29..0000000
diff --git a/startUpStuff b/startUpStuff
deleted file mode 100644
index 65d91ed..0000000
--- a/startUpStuff
+++ /dev/null
@@ -1,3 +0,0 @@
-adsfs
-dasfa
-sdaf
\ No newline at end of file
diff --git a/stuffToDo b/stuffToDo
deleted file mode 100644
index 5f1fa0b..0000000
--- a/stuffToDo
+++ /dev/null
@@ -1,4 +0,0 @@
-afawa
-asrf
-sa
-aas
diff --git a/testScr b/testScr
index dab3928..030dfce 100755
--- a/testScr
+++ b/testScr
@@ -4,7 +4,7 @@ Green="\033[0;32m"
 White="\033[1;37m"
 Space="\t\t\t\t\t\t\t"
 Format=${Space}${Green}
-Home=$(pwd)
+Home=$(pwd)														#Executes Pwd so the Dir does not change while running
 DefaultGitMsg="Default commit message"
 
 if [[ $1 = "--help" ]]
@@ -15,9 +15,9 @@ fi
 
 if [[ $1 == *"i"* ]]
 then
-	cd $Home
-	./funScr			# Yes I am this lazy
-	exit 0              # Exit when the functional script is closed
+	cd $Home													# CD to script root for no apparent reason 
+	./funScr													#(Huge problem having both modes in one script. Mostly related to args now working)
+	exit 0              										# Exit when the functional script is closed
 fi
 
 echo "Root directory is set to: ${Home}"
@@ -33,17 +33,17 @@ fi
 
 git status
 echo "Adding changes to log"
-echo -e "\n\n${Green}New and Modified${White}" > changes.log #Overwrites the old log file
+echo -e "\n\n${Green}New and Modified${White}" > changes.log 		#Overwrites the old log file
 git status -s | grep "?? \| M " | sed 's/.\{3\}//' >> changes.log
 echo -e "\n\n${Green}Removed files:${White}" >> changes.log
 git status -s | grep " D " | sed 's/.\{3\}//' >> changes.log
 echo -e "\n\n${Green}Changed code:${White}" >> changes.log
-git diff >> changes.log
+git diff >> changes.log												#Appends actual code changes
 grep --exclude="todo.log" -r "#ToDo" . > todo.log
 find . -name "*.hs" | xargs ghc -fno-code > error.log
 
 echo "Creating working tree log"
-find -type d | sed "/git/d" > workingTree.log
+find -type d | sed "/git/d" > workingTree.log						#Sed here removes any hidden git folders
 
 if [[ $1 == *"s"* ]]
 then
@@ -55,11 +55,11 @@ fi
 if [[ $1 == *"d"* ]]
 then
         echo "Please enter a file name"
-        read fileName
+        read fileName											#Could get input with flags although cleaner to do while running
         echo "Enter default text"
         read defaultText
         cat workingTree.log |
-        while read targetDir #ToDo check if file already exists. Have flag for overwrite
+        while read targetDir 									#ToDo check if file already exists. Have flag for overwrite
         do
 		
                 echo "Creating file ${fileName} in ${targetDir}"
@@ -85,7 +85,7 @@ then
 		while read inDir
 		do
 			cd ${inDir}
-			if [ -e $(basename "$stuffToAdd") ]
+			if [ -e $(basename "$stuffToAdd") ]									#File does not exist
 			then
 				CheckTag=$(grep "#ignore" $(basename "$stuffToAdd")) 			#Going two sub-shells deep
 				if [ "$CheckTag" != "#ignore" ]
@@ -102,7 +102,7 @@ then
 	done
 
 	echo "Starting remove files"
-	git status -s | grep " D " | sed 's/.\{3\}//' | #Space needed
+	git status -s | grep " D " | sed 's/.\{3\}//' | 						#Space needed
 	while read stuffToRm
 	do
 			git rm -f ${stuffToRm}
@@ -121,7 +121,7 @@ then
                 git commit -m "${2}"
 	else
 		echo "Sending commit with default message"
-        	git commit -m "Default auto commit"
+        	git commit -m "$DefaultGitMsg"							#Set at the top of the program
         fi
 fi
 
diff --git a/todo.log b/todo.log
index 341f2b6..79ec60b 100644
--- a/todo.log
+++ b/todo.log
@@ -1,24 +1,50 @@
-./changes.log:- grep --exclude="todo.log" -r "#ToDo" . > todo.log
-./changes.log:- grep --exclude="todo.log" -r "#ToDo" . > todo.log
-./changes.log:-+./changes.log: grep --exclude="todo.log" -r "#ToDo" . > todo.log
-./changes.log:-+./changes.log: grep --exclude="todo.log" -r "#ToDo" . > todo.log
-./changes.log:-+./changes.log:+./changes.log: grep --exclude="todo.log" -r "#ToDo" . > todo.log
-./changes.log:-+./changes.log:+./changes.log:+./changes.log: grep --exclude="todo.log" -r "#ToDo" . > todo.log
-./changes.log:-+./changes.log:+./changes.log:+./changes.log:+./changes.log: grep --exclude="todo.log" -r "#ToDo" . > todo.log
-./changes.log:-+./changes.log:+./changes.log:+./changes.log: ./funScr:grep --exclude="todo.log" -r "#ToDo" . > todo.log
-./changes.log:-+./changes.log:+./changes.log:+./changes.log: ./funScr:	while read targetDir #ToDo check if file already exists. Have flag for overwrite
-./changes.log:-+./changes.log:+./changes.log:+./changes.log: ./Labs/Bash01/ToDo:#ToDo add some stuff
-./changes.log:-+./changes.log:+./changes.log: ./funScr:grep --exclude="todo.log" -r "#ToDo" . > todo.log
-./changes.log:-+./changes.log:+./changes.log: ./funScr:	while read targetDir #ToDo check if file already exists. Have flag for overwrite
-./changes.log:-+./changes.log:+./changes.log: ./Labs/Bash01/ToDo:#ToDo add some stuff
-./changes.log:-+./changes.log: ./funScr:grep --exclude="todo.log" -r "#ToDo" . > todo.log
-./changes.log:-+./changes.log: ./funScr:	while read targetDir #ToDo check if file already exists. Have flag for overwrite
-./changes.log:-+./changes.log: ./Labs/Bash01/ToDo:#ToDo add some stuff
-./changes.log:- ./funScr:grep --exclude="todo.log" -r "#ToDo" . > todo.log
-./changes.log:- ./funScr:	while read targetDir #ToDo check if file already exists. Have flag for overwrite
-./changes.log:- ./Labs/Bash01/ToDo:#ToDo add some stuff
+./changes.log:-- grep --exclude="todo.log" -r "#ToDo" . > todo.log
+./changes.log:-- grep --exclude="todo.log" -r "#ToDo" . > todo.log
+./changes.log:--+./changes.log: grep --exclude="todo.log" -r "#ToDo" . > todo.log
+./changes.log:--+./changes.log: grep --exclude="todo.log" -r "#ToDo" . > todo.log
+./changes.log:--+./changes.log:+./changes.log: grep --exclude="todo.log" -r "#ToDo" . > todo.log
+./changes.log:--+./changes.log:+./changes.log:+./changes.log: grep --exclude="todo.log" -r "#ToDo" . > todo.log
+./changes.log:--+./changes.log:+./changes.log:+./changes.log:+./changes.log: grep --exclude="todo.log" -r "#ToDo" . > todo.log
+./changes.log:--+./changes.log:+./changes.log:+./changes.log: ./funScr:grep --exclude="todo.log" -r "#ToDo" . > todo.log
+./changes.log:--+./changes.log:+./changes.log:+./changes.log: ./funScr:	while read targetDir #ToDo check if file already exists. Have flag for overwrite
+./changes.log:--+./changes.log:+./changes.log:+./changes.log: ./Labs/Bash01/ToDo:#ToDo add some stuff
+./changes.log:--+./changes.log:+./changes.log: ./funScr:grep --exclude="todo.log" -r "#ToDo" . > todo.log
+./changes.log:--+./changes.log:+./changes.log: ./funScr:	while read targetDir #ToDo check if file already exists. Have flag for overwrite
+./changes.log:--+./changes.log:+./changes.log: ./Labs/Bash01/ToDo:#ToDo add some stuff
+./changes.log:--+./changes.log: ./funScr:grep --exclude="todo.log" -r "#ToDo" . > todo.log
+./changes.log:--+./changes.log: ./funScr:	while read targetDir #ToDo check if file already exists. Have flag for overwrite
+./changes.log:--+./changes.log: ./Labs/Bash01/ToDo:#ToDo add some stuff
+./changes.log:-- ./funScr:grep --exclude="todo.log" -r "#ToDo" . > todo.log
+./changes.log:-- ./funScr:	while read targetDir #ToDo check if file already exists. Have flag for overwrite
+./changes.log:-- ./Labs/Bash01/ToDo:#ToDo add some stuff
 ./funScr:grep --exclude="todo.log" -r "#ToDo" . > todo.log
 ./funScr:	while read targetDir #ToDo check if file already exists. Have flag for overwrite
+./grep.log:./changes.log:-- grep --exclude="todo.log" -r "#ToDo" . > todo.log
+./grep.log:./changes.log:-- grep --exclude="todo.log" -r "#ToDo" . > todo.log
+./grep.log:./changes.log:--+./changes.log: grep --exclude="todo.log" -r "#ToDo" . > todo.log
+./grep.log:./changes.log:--+./changes.log: grep --exclude="todo.log" -r "#ToDo" . > todo.log
+./grep.log:./changes.log:--+./changes.log:+./changes.log: grep --exclude="todo.log" -r "#ToDo" . > todo.log
+./grep.log:./changes.log:--+./changes.log:+./changes.log:+./changes.log: grep --exclude="todo.log" -r "#ToDo" . > todo.log
+./grep.log:./changes.log:--+./changes.log:+./changes.log:+./changes.log:+./changes.log: grep --exclude="todo.log" -r "#ToDo" . > todo.log
+./grep.log:./changes.log:--+./changes.log:+./changes.log:+./changes.log: ./funScr:grep --exclude="todo.log" -r "#ToDo" . > todo.log
+./grep.log:./changes.log:--+./changes.log:+./changes.log: ./funScr:grep --exclude="todo.log" -r "#ToDo" . > todo.log
+./grep.log:./changes.log:--+./changes.log: ./funScr:grep --exclude="todo.log" -r "#ToDo" . > todo.log
+./grep.log:./changes.log:-- ./funScr:grep --exclude="todo.log" -r "#ToDo" . > todo.log
+./grep.log:./funScr:grep --exclude="todo.log" -r "#ToDo" . > todo.log
+./grep.log:./testScr:grep --exclude="todo.log" -r "#ToDo" . > todo.log
+./grep.log:./todo.log:./changes.log:-- grep --exclude="todo.log" -r "#ToDo" . > todo.log
+./grep.log:./todo.log:./changes.log:-- grep --exclude="todo.log" -r "#ToDo" . > todo.log
+./grep.log:./todo.log:./changes.log:--+./changes.log: grep --exclude="todo.log" -r "#ToDo" . > todo.log
+./grep.log:./todo.log:./changes.log:--+./changes.log: grep --exclude="todo.log" -r "#ToDo" . > todo.log
+./grep.log:./todo.log:./changes.log:--+./changes.log:+./changes.log: grep --exclude="todo.log" -r "#ToDo" . > todo.log
+./grep.log:./todo.log:./changes.log:--+./changes.log:+./changes.log:+./changes.log: grep --exclude="todo.log" -r "#ToDo" . > todo.log
+./grep.log:./todo.log:./changes.log:--+./changes.log:+./changes.log:+./changes.log:+./changes.log: grep --exclude="todo.log" -r "#ToDo" . > todo.log
+./grep.log:./todo.log:./changes.log:--+./changes.log:+./changes.log:+./changes.log: ./funScr:grep --exclude="todo.log" -r "#ToDo" . > todo.log
+./grep.log:./todo.log:./changes.log:--+./changes.log:+./changes.log: ./funScr:grep --exclude="todo.log" -r "#ToDo" . > todo.log
+./grep.log:./todo.log:./changes.log:--+./changes.log: ./funScr:grep --exclude="todo.log" -r "#ToDo" . > todo.log
+./grep.log:./todo.log:./changes.log:-- ./funScr:grep --exclude="todo.log" -r "#ToDo" . > todo.log
+./grep.log:./todo.log:./funScr:grep --exclude="todo.log" -r "#ToDo" . > todo.log
+./grep.log:./todo.log:./testScr:grep --exclude="todo.log" -r "#ToDo" . > todo.log
 ./Labs/Bash01/ToDo:#ToDo add some stuff
 ./Labs/Bash01/ToDo:#ToDo second add stuff
 ./Labs/Elm01/ToDo:#ToDo Do some elm stuff
